{"ast":null,"code":"import _classCallCheck from \"/Users/bhatramy/Downloads/youngsheldonfinal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bhatramy/Downloads/youngsheldonfinal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bhatramy/Downloads/youngsheldonfinal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bhatramy/Downloads/youngsheldonfinal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bhatramy/Downloads/youngsheldonfinal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bhatramy/Downloads/youngsheldonfinal/src/AutoComplete.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Autosuggest from 'react-autosuggest';\nimport axios from 'axios';\nimport { debounce } from 'throttle-debounce';\n\nvar AutoComplete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoComplete, _React$Component);\n\n  function AutoComplete(props) {\n    var _this;\n\n    _classCallCheck(this, AutoComplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoComplete).call(this, props));\n\n    _this.renderSuggestion = function (suggestion) {\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, suggestion.title));\n    };\n\n    _this.getSuggestionValue = function (suggestion) {\n      return _this.state.value; //() => this.props.onSubmit(suggestion.message)\n    };\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n      axios.post(\"https://search-arizona-s65ctt5wcvhauqths3s7y45yya.us-east-1.es.amazonaws.com/\".concat(_this.state.m, \"/_doc/_search?size=3\"), {\n        query: {\n          multi_match: {\n            query: value,\n            fields: ['message', 'title']\n          }\n        },\n        sort: ['_score']\n      }).then(function (res) {\n        var results = res.data.hits.hits.map(function (h) {\n          return h._source;\n        });\n\n        _this.setState({\n          suggestions: results\n        });\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.onSuggestionSelected = function (event, _ref3) {\n      var suggestion = _ref3.suggestion,\n          suggestionValue = _ref3.suggestionValue,\n          suggestionIndex = _ref3.suggestionIndex,\n          sectionIndex = _ref3.sectionIndex,\n          method = _ref3.method;\n\n      //Here you do whatever you want with the values\n      _this.props.onSubmit(suggestion.message); //For example alert the selected value\n\n\n      _this.props.onSubmitUrl(suggestion.url);\n    };\n\n    _this.state = {\n      value: '',\n      suggestions: [],\n      m: _this.props.foo1\n    };\n    return _this;\n  }\n\n  _createClass(AutoComplete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onSuggestionsFetchRequested = debounce(500, this.onSuggestionsFetchRequested);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions,\n          m = _this$state.m;\n      console.log(m);\n      var inputProps = {\n        placeholder: 'Please enter your case',\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: this.getSuggestionValue,\n        renderSuggestion: this.renderSuggestion,\n        inputProps: inputProps,\n        onSuggestionSelected: this.onSuggestionSelected,\n        alwaysRenderSuggestions: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.m !== nextProps.foo1) {\n        return {\n          m: nextProps.foo1\n        };\n      } // Return null if the state hasn't changed\n\n\n      return null;\n    }\n  }]);\n\n  return AutoComplete;\n}(React.Component);\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/bhatramy/Downloads/youngsheldonfinal/src/AutoComplete.js"],"names":["React","ReactDOM","Autosuggest","axios","debounce","AutoComplete","props","renderSuggestion","suggestion","title","getSuggestionValue","state","value","onChange","event","newValue","setState","onSuggestionsFetchRequested","post","m","query","multi_match","fields","sort","then","res","results","data","hits","map","h","_source","suggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","suggestionIndex","sectionIndex","method","onSubmit","message","onSubmitUrl","url","foo1","console","log","inputProps","placeholder","nextProps","prevState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;IACMC,Y;;;;;AAEJ,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,sFAAMA,KAAN;;AADgB,UA0BlBC,gBA1BkB,GA0BC,UAAAC,UAAU,EAAI;AAC/B,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,UAAU,CAACC,KAAjB,CADF,CADF;AAMD,KAjCiB;;AAAA,UAmClBC,kBAnCkB,GAmCG,UAAAF,UAAU,EAAI;AACjC,aAAO,MAAKG,KAAL,CAAWC,KAAlB,CADiC,CAEjC;AACD,KAtCiB;;AAAA,UAuClBC,QAvCkB,GAuCP,UAACC,KAAD,QAAyB;AAAA,UAAfC,QAAe,QAAfA,QAAe;;AAElC,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG;AAAT,OAAd;AACD,KA1CiB;;AAAA,UA4ClBE,2BA5CkB,GA4CY,iBAAe;AAAA,UAAZL,KAAY,SAAZA,KAAY;AAC3CT,MAAAA,KAAK,CACFe,IADH,wFACwF,MAAKP,KAAL,CAAWQ,CADnG,2BAC4H;AACxHC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AACXD,YAAAA,KAAK,EAAER,KADI;AAEXU,YAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAFG;AADR,SADiH;AAOxHC,QAAAA,IAAI,EAAE,CAAC,QAAD;AAPkH,OAD5H,EAUGC,IAVH,CAUQ,UAAAC,GAAG,EAAI;AACX,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcA,IAAd,CAAmBC,GAAnB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,OAAN;AAAA,SAAxB,CAAhB;;AACA,cAAKf,QAAL,CAAc;AAAEgB,UAAAA,WAAW,EAAEN;AAAf,SAAd;AACD,OAbH;AAcD,KA3DiB;;AAAA,UA8DlBO,2BA9DkB,GA8DY,YAAM;AAClC,YAAKjB,QAAL,CAAc;AAAEgB,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAhEiB;;AAAA,UAkElBE,oBAlEkB,GAkEK,UAACpB,KAAD,SAAkF;AAAA,UAAxEN,UAAwE,SAAxEA,UAAwE;AAAA,UAA5D2B,eAA4D,SAA5DA,eAA4D;AAAA,UAA3CC,eAA2C,SAA3CA,eAA2C;AAAA,UAA1BC,YAA0B,SAA1BA,YAA0B;AAAA,UAAZC,MAAY,SAAZA,MAAY;;AACnG;AACA,YAAKhC,KAAL,CAAWiC,QAAX,CAAoB/B,UAAU,CAACgC,OAA/B,EAFmG,CAE1D;;;AACzC,YAAKlC,KAAL,CAAWmC,WAAX,CAAuBjC,UAAU,CAACkC,GAAlC;AACH,KAtEe;;AAEhB,UAAK/B,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXoB,MAAAA,WAAW,EAAE,EAFF;AAGXb,MAAAA,CAAC,EAAE,MAAKb,KAAL,CAAWqC;AAHH,KAAb;AAFgB;AAOjB;;;;wCAYmB;AAClB,WAAK1B,2BAAL,GAAmCb,QAAQ,CACzC,GADyC,EAEzC,KAAKa,2BAFoC,CAA3C;AAID;;;6BAgDQ;AAAA,wBAC2B,KAAKN,KADhC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQoB,WADR,eACQA,WADR;AAAA,UACqBb,CADrB,eACqBA,CADrB;AAEPyB,MAAAA,OAAO,CAACC,GAAR,CAAY1B,CAAZ;AACA,UAAM2B,UAAU,GAAG;AACjBC,QAAAA,WAAW,EAAE,wBADI;AAEjBnC,QAAAA,KAAK,EAALA,KAFiB;AAGjBC,QAAAA,QAAQ,EAAE,KAAKA;AAHE,OAAnB;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAEmB,WADf;AAEE,QAAA,2BAA2B,EAAE,KAAKf,2BAFpC;AAGE,QAAA,2BAA2B,EAAE,KAAKgB,2BAHpC;AAIE,QAAA,kBAAkB,EAAE,KAAKvB,kBAJ3B;AAKE,QAAA,gBAAgB,EAAE,KAAKH,gBALzB;AAME,QAAA,UAAU,EAAEuC,UANd;AAOE,QAAA,oBAAoB,EAAE,KAAKZ,oBAP7B;AAQE,QAAA,uBAAuB,EAAE,IAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,CADF;AAkBD;;;6CA1F+Bc,S,EAAWC,S,EAAW;AACpD,UAAIA,SAAS,CAAC9B,CAAV,KAAgB6B,SAAS,CAACL,IAA9B,EAAoC;AAClC,eAAO;AACLxB,UAAAA,CAAC,EAAE6B,SAAS,CAACL;AADR,SAAP;AAGD,OALmD,CAMpD;;;AACA,aAAO,IAAP;AACF;;;;EAnByB3C,KAAK,CAACkD,S;;AAuGjC,eAAe7C,YAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Autosuggest from 'react-autosuggest'\nimport axios from 'axios'\nimport { debounce } from 'throttle-debounce'\nclass AutoComplete extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      value: '',\n      suggestions: [],\n      m: this.props.foo1\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.m !== nextProps.foo1) {\n      return {\n        m: nextProps.foo1\n      };\n    }\n    // Return null if the state hasn't changed\n    return null;\n }\n\n  componentDidMount() {\n    this.onSuggestionsFetchRequested = debounce(\n      500,\n      this.onSuggestionsFetchRequested\n    )\n  }\n\n  renderSuggestion = suggestion => {\n    return (\n      <div className=\"result\">\n        <div>{suggestion.title}</div>\n      </div>\n\n    )\n  }\n\n  getSuggestionValue = suggestion => {\n    return(this.state.value);\n    //() => this.props.onSubmit(suggestion.message)\n  }\n  onChange = (event, { newValue }) => {\n\n    this.setState({ value: newValue })\n  }\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    axios\n      .post(`https://search-arizona-s65ctt5wcvhauqths3s7y45yya.us-east-1.es.amazonaws.com/${this.state.m}/_doc/_search?size=3`, {\n        query: {\n          multi_match: {\n            query: value,\n            fields: ['message', 'title']\n          }\n        },\n        sort: ['_score']\n      })\n      .then(res => {\n        const results = res.data.hits.hits.map(h => h._source)\n        this.setState({ suggestions: results })\n      })\n  }\n\n\n  onSuggestionsClearRequested = () => {\n    this.setState({ suggestions: [] })\n  }\n\n  onSuggestionSelected = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) =>{\n        //Here you do whatever you want with the values\n        this.props.onSubmit(suggestion.message); //For example alert the selected value\n        this.props.onSubmitUrl(suggestion.url);\n    }\n\n  render() {\n    const { value, suggestions, m } = this.state\n    console.log(m);\n    const inputProps = {\n      placeholder: 'Please enter your case',\n      value,\n      onChange: this.onChange\n    }\n\n    return (\n      <div className=\"App\">\n      <div className=\"App1\">\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={this.getSuggestionValue}\n          renderSuggestion={this.renderSuggestion}\n          inputProps={inputProps}\n          onSuggestionSelected={this.onSuggestionSelected}\n          alwaysRenderSuggestions={true}\n        />\n      </div>\n\n      </div>\n\n    )\n  }\n}\nexport default AutoComplete;\n"]},"metadata":{},"sourceType":"module"}